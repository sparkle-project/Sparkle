name: Build & Tests

on:
  push:
    branches: [ 2.x, master ]
  pull_request:
    branches: [ 2.x, master ]

jobs:
  build:
    strategy:
      matrix:
        xcode: ['xcode12.5.1', 'xcode13.2.1']
        include:
            - xcode: 'xcode12.5.1'
              xcode-path: '/Applications/Xcode_12.5.1.app/Contents/Developer'
              upload-dist: false
              run-analyzer: false
            - xcode: 'xcode13.2.1'
              xcode-path: '/Applications/Xcode_13.2.1.app/Contents/Developer'
              upload-dist: true
              run-analyzer: true
            
    name: Build and Test Sparkle
    runs-on: macos-11

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Build Unit Tests
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
          xcodebuild build-for-testing -project Sparkle.xcodeproj -scheme Distribution -enableCodeCoverage YES -derivedDataPath build
      - name: Run Unit Tests
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
          xcodebuild test-without-building -project Sparkle.xcodeproj -scheme Distribution -enableCodeCoverage YES -derivedDataPath build
      - name: Build UI Tests
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
          xcodebuild build-for-testing -project Sparkle.xcodeproj -scheme UITests -configuration Debug -derivedDataPath build
      - name: Run UI Tests
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
          xcodebuild test-without-building -project Sparkle.xcodeproj -scheme UITests -configuration Debug -derivedDataPath build

      - name: Analyze Sparkle
        if: ${{ matrix.run-analyzer && github.event_name == 'pull_request' }}
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
            xcodebuild analyze -project Sparkle.xcodeproj -quiet -scheme Sparkle -configuration Release -derivedDataPath analyze > anaylze_output.txt
            
      - name: Find Analyzed Warnings
        if: ${{ success() && matrix.run-analyzer && github.event_name == 'pull_request' }}
        id: findwarnings
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
            if grep -q "warning:" anaylze_output.txt; then
                echo '::set-output name=analyzestatus::0'
            else
                echo '::set-output name=analyzestatus::1'
            fi
        
      - name: Extract Analyzed Warnings
        if: ${{ success() && matrix.run-analyzer && github.event_name == 'pull_request' && steps.findwarnings.outputs.analyzestatus == '0' }}
        id: warnings
        run: |
            echo ::set-output name=content::$(cat anaylze_output.txt)
      
      - name: Post Analyzed Warnings
        if: ${{ success() && matrix.run-analyzer && github.event_name == 'pull_request' && steps.findwarnings.outputs.analyzestatus == '0' }}
        uses: mshick/add-pr-comment@v1
        with:
            allow-repeats: false
            repo-token: ${{ secrets.BOT_PERSONAL_ACCESS_TOKEN }}
            repo-token-user-login: 'Sparkle-Bot'
            message: "``` ${{ steps.warnings.outputs.content }} ```"
        
      - name: Build Release Distribution
        env:
          DEVELOPER_DIR: ${{ matrix.xcode-path }}
        run: |
          xcodebuild build -project Sparkle.xcodeproj -scheme Distribution -configuration Release -derivedDataPath build
      - name: Archive Test Results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: build-logs
          path: build/Logs
      - name: Upload Distribution
        if: ${{ success() && matrix.upload-dist }}
        uses: actions/upload-artifact@v2
        with:
          name: Sparkle-distribution-${{ matrix.xcode }}.tar.xz
          path: build/Build/Products/Release/sparkle-dist.tar.xz
